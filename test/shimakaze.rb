#!/usr/bin/env siren
# -*- mode:ruby; coding:utf-8 -*-
# IJN destroyer Shimakaze
# (c) dyama 2014

$ap = [0, 0, 0]
$yaxis = [0, 1, 0]

# lines of Hull
wl = [
  [[1.0,0,6],[1,1,6],[3,2,6],[6,3,6],[10,4,6],[13,4.5,6],[20,5.0,6],[30,5.5,6],[40,5.5,6],[50,5.5,6],[60,5.5,6],[70,5.5,6],[80,5.5,6],[90,5.1,6.0],[100,4.5,6],[105,4.1-0.00,6],[110,3.5-0.00,6],[113,2.9-0.00,6],[116,2.0-0.00,6],[119-0.0,0.9-0.00,6],[120+0.9,0,6]],
  [[0.7,0,5],[1,1,5],[3,2,5],[6,3,5],[10,4,5],[13,4.5,5],[20,5.0,5],[30,5.5,5],[40,5.5,5],[50,5.5,5],[60,5.5,5],[70,5.5,5],[80,5.5,5],[90,5.1,5.0],[100,4.5,5],[105,4.1-0.10,5],[110,3.5-0.10,5],[113,2.9-0.10,5],[116,2.0-0.12,5],[119-0.2,0.9-0.10,5],[120+0.4,0,5]],
  [[0.5,0,4],[1,1,4],[3,2,4],[6,3,4],[10,4,4],[13,4.5,4],[20,5.0,4],[30,5.5,4],[40,5.5,4],[50,5.5,4],[60,5.5,4],[70,5.5,4],[80,5.5,4],[90,5.1,4,0],[100,4.5,4],[105,4.1-0.16,4],[110,3.5-0.16,4],[113,2.9-0.18,4],[116,2.0-0.23,4],[119-0.4,0.9-0.16,4],[120+0.0,0,4]],
  [[0.3,0,3],[1,1,3],[3,2,3],[6,3,3],[10,4,3],[13,4.5,3],[20,5.0,3],[30,5.5,3],[40,5.5,3],[50,5.5,3],[60,5.5,3],[70,5.5,3],[80,5.5,3],[90,5.1,3.0],[100,4.5,3],[105,4.1-0.20,3],[110,3.5-0.20,3],[113,2.9-0.24,3],[116,2.0-0.33,3],[119-0.6,0.9-0.20,3],[120-0.3,0,3]],
  [[0.2,0,2],[1,1,2],[3,2,2],[6,3,2],[10,4,2],[13,4.5,2],[20,5.0,2],[30,5.5,2],[40,5.5,2],[50,5.5,2],[60,5.5,2],[70,5.5,2],[80,5.5,2],[90,5.1,2.0],[100,4.5,2],[105,4.1-0.22,2],[110,3.5-0.22,2],[113,2.9-0.29,2],[116,2.0-0.42,2],[119-0.8,0.9-0.22,2],[120-0.5,0,2]],
  [[0.1,0,1],[1,1,1],[3,2,1],[6,3,1],[10,4,1],[13,4.5,1],[20,5.0,1],[30,5.5,1],[40,5.5,1],[50,5.5,1],[60,5.5,1],[70,5.5,1],[80,5.5,1],[90,5.1,1.0],[100,4.5,1],[105,4.1-0.23,1],[110,3.5-0.23,1],[113,2.9-0.33,1],[116,2.0-0.50,1],[119-1.0,0.9-0.23,1],[120-0.6,0,1]],
  [[0.0,0,0],[1,1,0],[3,2,0],[6,3,0],[10,4,0],[13,4.5,0],[20,5.0,0],[30,5.5,0],[40,5.5,0],[50,5.5,0],[60,5.5,0],[70,5.5,0],[80,5.5,0],[90,5.1,0.0],[100,4.5,0],[105,4.1-0.24,0],[110,3.5-0.24,0],[113,2.9-0.35,0],[116,2.0-0.56,0],[119-1.2,0.9-0.24,0],[120-0.7,0,0]]
]

# 配列値をXYZ値を持つVec型に変換する
def ar2vecs(ar)
  res = []
  ar.each do |a|
    res.push Vec.new a[0], a[1], a[2]
  end
  return res
end

lines = []
wl.each do |n|
  m = ar2vecs n
  lines.push(Build.polyline(m))
end

hullp = Offset.loft lines

gunnel = ar2vecs(wl.first + [wl.first[0]])
topp = Build.polygon gunnel

gunnel = ar2vecs(wl.last + [wl.last[0]])
btmp = Build.polygon gunnel

pside = Build.sewing [hullp, topp, btmp]
sside = Build.copy pside
sside.mirror! Vec.new(0, 0, 0), Vec.new(0, 1, 0)

hullshell = Build.sewing [pside, sside]
hull = Build.solid hullshell

# Upperdeck line
n = -9
a = 10
ul = [[0,n,2.5],[83,n,2.5],[85,n,4.8],[100,n,4.8],[110,n,5.1],[116,n,5.5],[122,n,6],
  [122,n,a],[0,n,a],[0,n,2.5]]

vecs = ar2vecs ul
plate = Build.polygon vecs
deckbox = Offset.sweep_vec plate, Vec.new(0, -n*2, 0)

res = Bool.cut hull, deckbox

BRepIO.save res, "/tmp/shimakaze.brep"
puts "Done."

